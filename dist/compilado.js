!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const n="http://localhost:3000/api/";class i{get(e){return new Promise(t=>{const r=new XMLHttpRequest;r.open("GET",n+e),r.onload=()=>{const e=JSON.parse(r.responseText);t(e)},r.send()})}}class o{buscarDetalhes(e){return(new i).get("filmes/"+e)}}class s{constructor(e,t,r){this.titulo=e,this.genero=t,this.avaliacao=r}async exibir(e){const t=new o,r=await t.buscarDetalhes(e),n=document.querySelector("aside#detalhes-filme");n.className="exibir",n.querySelector("button").onclick=this.esconder,n.querySelector("h2.detalhes-titulo").innerHTML=r.titulo,n.querySelector("div.detalhes-genero").innerHTML=r.genero,n.querySelector("div.detalhes-avaliacao").innerHTML=r.avaliacao,n.querySelector("div.detalhes-diretor").innerHTML=r.diretor,n.querySelector("div.detalhes-ano").innerHTML=r.ano,n.querySelector("div.detalhes-sinopse").innerHTML=r.sinopse,n.querySelector("div.detalhes-faixa-etaria").innerHTML=r.faixaEtaria,n.querySelector("img.detalhes-imagem").src=r.imagem}esconder(){document.querySelector("aside#detalhes-filme").className=""}}class a{constructor(e,t,r,n,i){this.id=e,this.titulo=t,this.genero=r,this.avaliacao=n,this.imagem=i}mostrarDetalhes(){(new s).exibir(this.id)}renderizar(){const e=document.createElement("article");e.className="filme-miniatura",e.style.backgroundImage=`url(${this.imagem})`,e.onclick=this.mostrarDetalhes.bind(this);const t=document.createElement("h1");return t.innerHTML=this.titulo,e.appendChild(t),e}}class c{constructor(e,t){this.titulo=e,this.filmes=t}renderizar(){const e=document.createElement("h1");e.innerHTML=this.titulo,document.querySelector("#lista-filmes").appendChild(e);for(const e of this.filmes){const t=new a(e.id,e.titulo,e.genero,e.avaliacao,e.imagem);document.querySelector("#lista-filmes").appendChild(t.renderizar())}}}class l{buscarCategorias(){return(new i).get("categorias")}}class u{buscarGeneros(){return(new i).get("generos")}}(new class{constructor(){this.exibindoMenu=!1}async carregarGeneros(){const e=new u,t=await e.buscarGeneros(),r=document.querySelector("#listaGeneros");for(const e of t){const t=document.createElement("li");t.innerHTML=e.descricao,r.appendChild(t)}}exibirGeneros(){const e=document.querySelector("#listaGeneros");1==this.exibindoMenu?(this.exibindoMenu=!1,e.className=""):(this.exibindoMenu=!0,e.className="exibir")}async renderizar(){const e=new l,t=await e.buscarCategorias();for(const e of t){new c(e.descricao,e.filmes).renderizar()}this.carregarGeneros(),document.querySelector("#generos").onclick=this.exibirGeneros}}).renderizar()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,